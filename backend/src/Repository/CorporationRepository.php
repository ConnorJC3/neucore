<?php

declare(strict_types=1);

namespace Neucore\Repository;

use Doctrine\ORM\EntityRepository;
use Neucore\Entity\Corporation;
use Neucore\Util\Database;

/**
 * CorporationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @method Corporation|null find($id, $lockMode = null, $lockVersion = null)
 * @method Corporation|null findOneBy(array $criteria, array $orderBy = null)
 * @method Corporation[] findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 *
 * @psalm-suppress MissingTemplateParam
 */
class CorporationRepository extends EntityRepository
{
    /**
     * @return Corporation[]
     */
    public function getAllWithGroups(): array
    {
        return $this->createQueryBuilder('c')
            ->join('c.groups', 'g')
            ->andWhere('g.id IS NOT NULL')
            ->orderBy('c.name')
            ->getQuery()
            ->getResult();
    }

    /**
     * @return Corporation[]
     */
    public function getAllWithMemberTrackingData(): array
    {
        // TODO this is a bad query, joins too much, CPU intensive

        return $this->createQueryBuilder('c')
            ->join('c.members', 'm')
            ->andWhere('m.corporation IS NOT NULL')
            ->orderBy('c.name')
            ->getQuery()
            ->getResult();
    }

    /**
     * @param array $corporationIds
     * @return Corporation[]
     */
    public function getAllFromAlliances(array $corporationIds): array
    {
        $qb = $this->createQueryBuilder('c');
        return $qb
            ->leftJoin('c.alliance', 'a')
            ->where($qb->expr()->in('a.id', ':ids'))
            ->orderBy('c.id')
            ->setParameter('ids', $corporationIds)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return Corporation[]
     * @see AllianceRepository::findByNameOrTickerPartialMatch
     */
    public function findByNameOrTickerPartialMatch(string $search): array
    {
        $search = Database::escapeForLike($search);

        // For some reason there's an error "SQLSTATE[HY093]: Invalid parameter number: number
        // of bound variables does not match number of tokens" when both are used in the same
        // query with MariaDB if the sql mode includes NO_BACKSLASH_ESCAPES and "ESCAPE" is used
        // in the query.

        $query1 = $this->createQueryBuilder('c')
            ->where("c.name LIKE :name ESCAPE '\'")
            ->addOrderBy('c.name', 'ASC')
            ->setParameter('name', "%$search%");
        $result1 = $query1->getQuery()->getResult();

        $query2 = $this->createQueryBuilder('c')
            ->where("c.ticker LIKE :ticker ESCAPE '\'")
            ->addOrderBy('c.name', 'ASC')
            ->setParameter('ticker', "%$search%");
        $result2 = $query2->getQuery()->getResult();

        return array_merge($result1, $result2);
    }
}
